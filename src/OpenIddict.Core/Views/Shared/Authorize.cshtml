@using System.Threading.Tasks
@using AspNet.Security.OpenIdConnect.Extensions
@using Microsoft.IdentityModel.Protocols.OpenIdConnect
@using OpenIddict

@model Tuple<OpenIdConnectMessage, string, Dictionary<string, Tuple<string, string>>>

<div class="jumbotron">
    <h1>Authorization</h1>

    <p class="lead text-left">Do you wanna grant <strong>@Model.Item2</strong> an access to your resources? (scopes requested: @Model.Item1.Scope)</p>
    <p class="lead text-left"><strong>@Model.Item2</strong> will be able to access the following endpoints: @string.Join(" ; ", Model.Item1.GetResources())</p>

    <form enctype="application/x-www-form-urlencoded" method="post">
        @Html.AntiForgeryToken()
        <input type="hidden" name="unique_id" value="@Model.Item1.GetUniqueIdentifier()" />
        @foreach (var scope in Model.Item3)
        {
            <div class="scope">
                <label for="scope_@scope.Key">@scope.Value.Item1</label>
                <input id="scope_@scope.Key" name="scope" type="checkbox" value="@scope.Key" />
                <p>@scope.Value.Item2</p>
            </div>
        }

        <input formaction="@Url.Action("Accept")" class="btn btn-lg btn-success" name="Authorize" type="submit" value="Yeah, sure" />
        <input formaction="@Url.Action("Deny")" class="btn btn-lg btn-danger" name="Deny" type="submit" value="Hell, no" />
    </form>
</div>
