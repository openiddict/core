<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFrameworks>
      $(NetFrameworkTargetFrameworks);
      $(NetCoreTargetFrameworks);
      $(NetStandardTargetFrameworks)
    </TargetFrameworks>
  </PropertyGroup>

  <PropertyGroup>
    <Description>Entity Framework Core stores for OpenIddict.</Description>
    <PackageTags>$(PackageTags);entityframeworkcore</PackageTags>
  </PropertyGroup>

  <ItemGroup>
    <ProjectReference Include="..\OpenIddict.Core\OpenIddict.Core.csproj" />
    <ProjectReference Include="..\OpenIddict.EntityFrameworkCore.Models\OpenIddict.EntityFrameworkCore.Models.csproj" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.EntityFrameworkCore.Relational" />
  </ItemGroup>

  <ItemGroup>
    <Using Include="OpenIddict.Abstractions" />
    <Using Include="OpenIddict.Abstractions.OpenIddictConstants" Static="true" />
    <Using Include="OpenIddict.Abstractions.OpenIddictResources" Alias="SR" />
    <Using Include="Microsoft.EntityFrameworkCore" />
    <Using Include="Microsoft.EntityFrameworkCore.Infrastructure" />
    <Using Include="Microsoft.EntityFrameworkCore.Storage" />
  </ItemGroup>

  <!--
    Note: Entity Framework Core 2.x references System.Interactive.Async 3.x, that includes
    its own IAsyncEnumerable. To work around collisions between this type and the new type
    now included in the BCL (System.Runtime), an alias is added to System.Interactive.Async.
  -->

  <Target Name="AddAssemblyAliasToReactiveAsync" AfterTargets="ResolveAssemblyReferences">
    <ItemGroup>
      <ReferencePath Condition=" '%(FileName)' == 'System.Interactive.Async' ">
        <Aliases>reactive</Aliases>
      </ReferencePath>
    </ItemGroup>
  </Target>

</Project>
